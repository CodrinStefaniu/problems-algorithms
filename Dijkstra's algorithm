#include <iostream>

using namespace std;

int n,p,y,z,c,ma[101][101],D[101],infinit=1000001,viz[101];

void dijkstra(int k)
{
    int l,ok,x,minim,i;
    for (l=1;l<=n;l++)
    {
        D[l]=ma[k][l];
        viz[l]=0;
    }
    D[k]=0; viz[k]=1; ok=1;
    while (ok)
    {
        minim=infinit;
        for (i=1;i<=n;i++)
            if (viz[i]==0 && minim>D[i])
            {
                minim=D[i];
                x=i;
            }
        if (minim!=infinit)
        {
            viz[x]=1;
            for (i=1;i<=n;i++)
                if (viz[i]==0 && D[i]>D[x]+ma[x][i])
                D[i]=D[x]+ma[x][i];
        }
        else
            ok=0;
    }
}

int main()
{
    int i,j;
    cin>>n>>p;

    for (i=1;i<=n;i++)
    {
        for (j=1;j<=n;j++)
            ma[i][j]=infinit;
        ma[i][i]=0;
    }

    while (cin>>y>>z>>c)
        ma[y][z]=c;

    dijkstra(p);

    for (i=1;i<=n;i++)
    {
        if (D[i]!=infinit)
            cout<<D[i]<<' ';
        else
            cout<<-1<<' ';
    }

    return 0;
}
